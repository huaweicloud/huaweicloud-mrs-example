<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.huawei.mrs</groupId>
	<artifactId>redis-demo</artifactId>
	<version>1.0.0</version>

	<properties>
		<mrs.version>8.1.0-310003</mrs.version>
		<jedisclient.version>8.1.0-310003</jedisclient.version>
		<commons-pools2.version>2.8.0</commons-pools2.version>
		<log4j.version>1.2.17-atlassian-13</log4j.version>
	</properties>
	<dependencies>

		<dependency>
			<groupId>com.huawei.mrs</groupId>
			<artifactId>jredisclient</artifactId>
			<version>${jedisclient.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.huawei.mrs</groupId>
			<artifactId>wcc_krb5</artifactId>
			<version>${mrs.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>${commons-pools2.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- The configuration of maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Configuration of the archiver -->
					<archive>
						<!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>
						<!-- Manifest specific configuration -->
						<manifest>
							<!-- 是否要把第三方jar放到manifest的classpath中 -->
							<addClasspath>true</addClasspath>
							<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
					<!-- 过滤掉不希望包含在jar中的文件 -->
					<excludes>
						<exclude>**/*.properties</exclude>
						<exclude>**/*.xml</exclude>
						<exclude>test/*.java</exclude>
						<exclude>**/*.sh</exclude>
						<exclude>**/jredis-client</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<classpathDependencyScopeExclude>common</classpathDependencyScopeExclude>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<outputDirectory>lib</outputDirectory>
					<excludeTransitive>true</excludeTransitive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>lib</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>